stages:
  - test   # run the tests for this codebase
  - build  # build the container image and push it to the container registry
  - deploy # deploy the built image on Kubernetes

variables:
  # useful for docker
  DOCKER_DRIVER: overlay2
  DOCKER_BUILD_ROOT: /unbabel/sre-team/replicant

  # define the base images to use in the stages
  ECR_BASE_IMAGES: sre/base-images
  BASE_IMAGE_TAG: go-1.13-v0.0.2
  BUILD_IMAGE: $ECR_URL/$ECR_BASE_IMAGES:$BASE_IMAGE_TAG

  # the replicant ECR repository URLs
  REPLICANT_MASTER_ECR_URL: $ECR_URL/sre/replicant/master
  REPLICANT_WORKER_ECR_URL: $ECR_URL/sre/replicant/worker


# we should run the tests on all merge requests and master
test:
  stage: test
  image: $BUILD_IMAGE
  only:
    - external_pull_requests
    - master
    - push
  script:
    - make test

build_and_push_provisioner:
  stage: build
  image: docker
  only:
    - tags
  before_script:
    - apk update
    - apk add py2-pip git
    - pip install awscli
    - eval $(aws ecr get-login --region us-east-1 --no-include-email)
    - git pull origin master --tags --force
    - export GIT_TAG=`git tag --sort=-version:refname | egrep -m 1 "v[0-9]+\.[0-9]+\.[0-9]+"`
  script:
    - docker build -f docker/provisioner/Dockerfile . -t $REPLICANT_MASTER_ECR_URL:latest -t $PROVISIONER_ECR_URL:$CI_COMMIT_SHA -t $PROVISIONER_ECR_URL:$GIT_TAG
    - docker push $REPLICANT_MASTER_ECR_URL:latest
    - docker push $REPLICANT_MASTER_ECR_URL:$CI_COMMIT_SHA
    - docker push $REPLICANT_MASTER_ECR_URL:$GIT_TAG

